version: '3.8'

services:
  # Redis для хранения данных
  redis:
    image: redis:7-alpine
    container_name: defendsphere-redis
    ports:
      - "6380:6380"
    volumes:
      - redis_data:/data
    command: redis-server --port 6380 --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API сервер
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: defendsphere-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_URL=redis://redis:6380
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/defendsphere?schema=public
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=reports
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_started
      minio:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend приложение
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: defendsphere-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000}
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    container_name: defendsphere-postgres
    environment:
      - POSTGRES_DB=defendsphere
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "55555:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  # MinIO object storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: defendsphere-minio
    command: server /data --console-address :9001
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  pg_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: defendsphere-network