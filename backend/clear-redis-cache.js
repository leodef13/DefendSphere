import { createClient } from 'redis'

const REDIS_URL = process.env.REDIS_URL || 'redis://localhost:6380'

async function clearRedisCache() {
  const redis = createClient({ url: REDIS_URL })
  
  try {
    await redis.connect()
    console.log('Connected to Redis')
    
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ Redis...')
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Redis
    const info = await redis.info('memory')
    console.log('Redis memory info before cleanup:')
    console.log(info.split('\n').filter(line => line.includes('used_memory')).join('\n'))
    
    // –û—á–∏—â–∞–µ–º –≤–µ—Å—å –∫—ç—à
    await redis.flushAll()
    console.log('‚úÖ Redis –∫—ç—à –æ—á–∏—â–µ–Ω')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫—ç—à –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–µ–Ω
    const keys = await redis.keys('*')
    console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: ${keys.length}`)
    
    if (keys.length === 0) {
      console.log('‚úÖ –ö—ç—à –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω')
    } else {
      console.log('‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –∫–ª—é—á–∏:', keys.slice(0, 10))
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞:', error.message)
  } finally {
    await redis.quit()
  }
}

clearRedisCache()